1) Define a class named Queue, with private members size, array, front, and rear. and  public functions is_empty(), is_full(), enqueue(), dequeue(), and display().
2) Inside the constructor of the Queue class, initialize size, array, front = -1, and rear = -1.
3) Define the is_empty() function which returns True if rear == front else False.
4) Define the is_full() function which returns True if rear == size-1 else False.
5) Inside the enqueue() function,
    Accepts an element as parameter.
    If the queue is already full, prints a message and does not add the element.
    Increment rear with 1
    Adds the element to the rear of the queue.
6) inside the dequeue function,
    If the queue is already empty, prints a message and returns -1.
    Increment front with 1
    Removes the front element of the queue and returns it.  
7) Define the display function which prints all the elements present in the queue.
8) In the main function:
    a. Create an instance of the Queue class.
    b. Define a loop that accepts user input until the user enters 4 to exit.
    c. Inside the loop, accept user input to choose one of the operations - enqueue, dequeue, display, or exit.
    d. Based on the user's input, perform the corresponding operation. If the user enters an invalid input, print a message.
    e. Continue the loop until the user enters 4 to exit.
9) End